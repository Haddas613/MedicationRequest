// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UnitTestPatientMedicationMoq.Data;

#nullable disable

namespace UnitTestPatientMedicationMoq.Migrations
{
    [DbContext(typeof(DbContextClass))]
    partial class DbContextClassModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.2.24128.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PatientMedicationApi.Models.Clinician", b =>
                {
                    b.Property<string>("RegistrationID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RegistrationID");

                    b.ToTable("Clinicians");
                });

            modelBuilder.Entity("PatientMedicationApi.Models.Frequency", b =>
                {
                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("Amount")
                        .HasColumnOrder(0);

                    b.Property<int>("UnitTime")
                        .HasColumnType("int")
                        .HasColumnName("UnitTime")
                        .HasColumnOrder(1);

                    b.HasKey("Amount", "UnitTime");

                    b.ToTable("Frequency");
                });

            modelBuilder.Entity("PatientMedicationApi.Models.Medication", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CodeSystem")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Form")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Strength")
                        .HasColumnType("int");

                    b.Property<int>("StrengthUnit")
                        .HasColumnType("int");

                    b.HasKey("Code");

                    b.ToTable("Medications");
                });

            modelBuilder.Entity("PatientMedicationApi.Models.MedicationRequest", b =>
                {
                    b.Property<string>("PatientIdentity")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)")
                        .HasColumnName("PatientIdentity")
                        .HasColumnOrder(0);

                    b.Property<string>("ClinicianRegistrationID")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("ClinicianRegistrationID")
                        .HasColumnOrder(1);

                    b.Property<string>("MedicationCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MedicationCode")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FrequencyAmount")
                        .HasColumnType("int");

                    b.Property<int>("FrequencyUnitTime")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("PatientIdentity", "ClinicianRegistrationID", "MedicationCode");

                    b.HasIndex("FrequencyAmount", "FrequencyUnitTime");

                    b.ToTable("MedicationRequests");
                });

            modelBuilder.Entity("PatientMedicationApi.Models.MedicationRequest", b =>
                {
                    b.HasOne("PatientMedicationApi.Models.Frequency", "Frequency")
                        .WithMany()
                        .HasForeignKey("FrequencyAmount", "FrequencyUnitTime")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Frequency");
                });
#pragma warning restore 612, 618
        }
    }
}
